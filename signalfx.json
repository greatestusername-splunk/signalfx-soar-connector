{
    "appid": "045338a7-bd8b-4014-b516-27391505c71b",
    "name": "SignalFx",
    "description": "This App uses the Splunk Infrastructure Monitoring (SignalFx) API to retrieve and send data",
    "type": "endpoint",
    "product_vendor": "Splunk",
    "logo": "signalfx.svg",
    "logo_dark": "signalfx_dark.svg",
    "product_name": "SignalFx",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "Andreas Buis & Angelo Brancato",
    "license": "Copyright (c) Angelo Brancato, 2021",
    "app_version": "1.0.1",
    "utctime_updated": "2021-02-09T13:51:01.186096Z",
    "package_name": "phantom_signalfx",
    "main_module": "signalfx_connector.pyc",
    "min_phantom_version": "4.9.1",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "base_url": {
            "description": "Splunk Infrastructure Monitoring (SignalFx) URL",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "https://api.eu0.signalfx.com",
            "order": 0
        },
        "token": {
            "description": "Go to SignalFx My Profile -> Access Tokens",
            "data_type": "password",
            "required": true,
            "order": 1
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "run query",
            "identifier": "run_query",
            "description": "Retrieves dimensions based on a query",
            "verbose": "This action retrieves dimensions based on a query",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "query": {
                    "description": "Query",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "*"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.query",
                    "data_type": "string",
                    "contains": [
                        "*"
                    ],
                    "column_name": "query",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "contains": [
                        "data"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string",
                    "contains": [
                        "summary"
                    ]
                },                                
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "clear incident",
            "identifier": "clear_incident",
            "description": "Clears specified incident",
            "verbose": "This action clears (resolves) a specific incident that is identified by the paramter incident id",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "incidentid": {
                    "description": "Incident to clear",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "*"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.incidentid",
                    "data_type": "string",
                    "contains": [
                        "*"
                    ],
                    "column_name": "incidentid",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "contains": [
                        "data"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string",
                    "contains": [
                        "summary"
                    ]
                },                                
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get incident",
            "identifier": "get_incident",
            "description": "Get specified incident details",
            "verbose": "This action pulls details from a specific incident that is identified by the paramter incident id",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "incidentid": {
                    "description": "Incident details",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "*"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.incidentid",
                    "data_type": "string",
                    "contains": [
                        "*"
                    ],
                    "column_name": "incidentid",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "contains": [
                        "data"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string",
                    "contains": [
                        "summary"
                    ]
                },                                
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ]
}